name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: openrank
            asset_name: openrank-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: openrank
            asset_name: openrank-linux-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: openrank.exe
            asset_name: openrank-windows-amd64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: openrank
            asset_name: openrank-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: openrank
            asset_name: openrank-macos-arm64

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install cross-compilation tools
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Set up environment variables
      run: |
        echo "CHAIN_RPC_URL=${{ secrets.CHAIN_RPC_URL }}" >> $GITHUB_ENV
        echo "OPENRANK_MANAGER_ADDRESS=${{ secrets.OPENRANK_MANAGER_ADDRESS }}" >> $GITHUB_ENV
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

    - name: Build binary
      run: |
        if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
          export CC=aarch64-linux-gnu-gcc
          export AR=aarch64-linux-gnu-ar
          export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
        fi
        cargo build --release --target ${{ matrix.target }} -p openrank
      shell: bash

    - name: Strip binary (Linux and macOS)
      if: matrix.os != 'windows-latest'
      run: |
        if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
          aarch64-linux-gnu-strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        else
          strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create checksums
      run: |
        cd artifacts
        find . -type f -exec sha256sum {} \; > ../checksums.txt

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/*/openrank*
          checksums.txt
        body: |
          ## OpenRank CLI Release

          Pre-compiled binaries for various platforms.

          ### Installation

          1. Download the appropriate binary for your platform
          2. Make it executable: `chmod +x openrank-*`
          3. Move to PATH: `sudo mv openrank-* /usr/local/bin/openrank`

          ### Checksums

          Verify your download with the provided checksums.txt file.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
