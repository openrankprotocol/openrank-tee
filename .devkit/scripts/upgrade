#!/usr/bin/env bash

set -e

originalProjectDir=$1

if [ -z "$originalProjectDir" ]; then
    log "Usage: $0 <original_project_dir>"
    exit 1
fi

# source in helper functions
source "$( dirname "${BASH_SOURCE[0]}" )/helpers/helpers.sh"

log "Starting TEE AVS template upgrade process..."

# Check if original directory has uncommitted changes
set +e
cd $originalProjectDir
if [ -n "$(git status --porcelain)" ]; then
    log "Uncommitted changes found, please commit or stash them before upgrading"
    git status --short
    exit 1
else
    log "Working directory clean, continuing with upgrade..."
fi
set -e

cd -

# Get the directory where the script is located
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"

# Navigate to the parent directories to find project root
PROJECT_BASE_DIR="$(dirname "$(dirname "$SCRIPT_DIR")")"

log "Upgrading TEE AVS template from: $PROJECT_BASE_DIR"
log "Upgrading project at: $originalProjectDir"

# Copy .devkit directory (excluding contracts which may be customized)
log "Updating .devkit scripts..."
for item in "${PROJECT_BASE_DIR}/.devkit/"*; do
  [ "$(basename "$item")" = "contracts" ] && continue
  cp -rfv "$item" "$originalProjectDir/.devkit/"
done

# Copy .compute-tee directory (TEE-specific configuration)
log "Updating .compute-tee configuration..."
if [ -d "${PROJECT_BASE_DIR}/.compute-tee" ]; then
    cp -rfv "${PROJECT_BASE_DIR}/.compute-tee" $originalProjectDir
fi

# Copy template files
log "Updating template files..."
if [ -f "${PROJECT_BASE_DIR}/docker-compose.yml" ]; then
    cp -rfv "${PROJECT_BASE_DIR}/docker-compose.yml" $originalProjectDir
fi

if [ -f "${PROJECT_BASE_DIR}/.env.public" ]; then
    cp -rfv "${PROJECT_BASE_DIR}/.env.public" $originalProjectDir
fi

if [ -f "${PROJECT_BASE_DIR}/.env.private" ]; then
    cp -rfv "${PROJECT_BASE_DIR}/.env.private" $originalProjectDir
fi

# Update contracts directory (but preserve any custom contracts)
log "Updating contracts directory..."
if [ -d "${PROJECT_BASE_DIR}/contracts" ]; then
    # Create backup if user has custom contracts
    if [ -d "$originalProjectDir/contracts" ]; then
        log "Backing up existing contracts to contracts.backup..."
        cp -r "$originalProjectDir/contracts" "$originalProjectDir/contracts.backup"
    fi
    
    cp -rfv "${PROJECT_BASE_DIR}/contracts/" $originalProjectDir/contracts
    
    # Remind user to check their custom contracts
    if [ -d "$originalProjectDir/contracts.backup" ]; then
        log "WARNING: Your custom contracts have been backed up to contracts.backup/"
        log "Please review the new contracts/ directory and merge any custom changes."
    fi
fi

cd $originalProjectDir

log "TEE AVS template upgrade completed successfully!"
log ""
log "Next steps:"
log "1. Review any changes to docker-compose.yml"
log "2. Check .compute-tee/context/devnet.yaml for new configuration options"
log "3. If you had custom contracts, review contracts.backup/ and merge changes"
log "4. Test your template with: devkit avs build"
log "5. Commit the upgrade: git add . && git commit -m 'Upgrade TEE AVS template'"
